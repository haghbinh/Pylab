[
  {
    "objectID": "Notebooks/sec2_Data_Types.html",
    "href": "Notebooks/sec2_Data_Types.html",
    "title": "",
    "section": "",
    "text": "&lt;font face=\"Zar_Bd.ttf\" size=5&gt;\n    &lt;div align=center&gt;\n        &lt;font face=\"IranNastaliq\" size=10&gt;\n            &lt;p dir=\"rtl\" style=\"text-align: justify;\"&gt;&lt;/p&gt;\n            &lt;p dir=\"rtl\" style=\"text-align: justify;\"&gt;&lt;/p&gt;\nبه نام خدا\n\n\n        &lt;/font&gt;\n           &lt;font color=#FF7500 face=\"IranNastaliq\" size=30&gt;   &lt;h3&gt;درس دوم: متغیرها و انواع داده در پایتون&lt;/h3&gt;  &lt;/font&gt;\n    &lt;/div&gt;\n    &lt;hr /&gt;\n    &lt;style type=\"text/css\" scoped&gt;\n    p{\n    border: 1px solid #a2a9b1;background-color: #f8f9fa;display: inline-block;\n    };\n    &lt;/style&gt;\n&lt;/font&gt;\n\n\nدر این درس با مفهوم متغیرها و انواع داده پایه در پایتون آشنا می‌شویم.\n\n\n\n\n\n\nمتغیر چیست؟\n\n\nمتغیر (Variable) محفظه‌ای است برای نگهداری داده‌ها. در پایتون، نیازی به تعیین نوع متغیر نیست و نوع آن به صورت خودکار با توجه به مقدار تعیین می‌شود.\n\n\nx = 5        # عدد صحیح (int)\npi = 3.14    # عدد اعشاری (float)\nname = 'Ali' # رشته (string)\nflag = True  # مقدار بولی (bool)\n\nprint(x, pi, name, flag)\n\n5 3.14 Ali True\n\n\n\nبررسی نوع داده\n\n\nبرای بررسی نوع یک متغیر می‌توان از تابع type استفاده کرد:\n\n\nprint(type(x))\nprint(type(pi))\nprint(type(name))\nprint(type(flag))\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n&lt;class 'bool'&gt;\n\n\n\nانواع داده عددی در پایتون\n\n\na = 10       # int\nb = 3.5      # float\nc = 1 + 2j   # complex\n\nprint(type(a), type(b), type(c))\n\n&lt;class 'int'&gt; &lt;class 'float'&gt; &lt;class 'complex'&gt;\n\n\n\nرشته‌ها (Strings)\n\n\nرشته‌ها مجموعه‌ای از کاراکترها هستند که در داخل کوتیشن (’’ یا ““) قرار می‌گیرند.\n\n\ntext = \"Hello\"\nprint(text)\nprint(text.upper())\nprint(text.lower())\nprint(text[0])\n\nHello\nHELLO\nhello\nH\n\n\n\nمقادیر بولی (Boolean)\n\n\nنوع bool دو مقدار دارد: True و False. این نوع در تصمیم‌گیری‌ها و شرط‌ها استفاده می‌شود.\n\n\na = 10\nb = 5\nprint(a &gt; b)    # True\nprint(a == b)   # False\n\nTrue\nFalse\n\n\n\nپویایی نوع داده در پایتون\n\n\nدر پایتون می‌توان مقدار یک متغیر را در هر زمان تغییر داد و نوع آن نیز به‌روزرسانی خواهد شد.\n\n\nx = 42\nprint(type(x))\nx = 'Now I am a string!'\nprint(type(x))\n\n&lt;class 'int'&gt;\n&lt;class 'str'&gt;\n\n\n\nتمرین 📝\n\n\nیک اسکریپت بنویسید که موارد زیر را انجام دهد:\n\n\n\nاز کاربر یک عدد صحیح دریافت کند.\n\n\nاز کاربر یک عدد اعشاری دریافت کند.\n\n\nاز کاربر یک رشته (نام کاربر) دریافت کند.\n\n\nنوع داده هر ورودی را با استفاده از تابع type چاپ کند.\n\n\n\nدر نهایت مقدار عدد صحیح را با عدد اعشاری جمع کرده و همراه با نام کاربر چاپ کنید."
  },
  {
    "objectID": "index.html#پیشنیازها",
    "href": "index.html#پیشنیازها",
    "title": "برنامه‌نویسی پایتون",
    "section": "🛠 پیش‌نیازها",
    "text": "🛠 پیش‌نیازها\nبرای اجرای فایل‌ها از دستورات زیر استفاده کنید:\npip install -r requirements.txt"
  },
  {
    "objectID": "Notebooks/sec1_setup_intro.html",
    "href": "Notebooks/sec1_setup_intro.html",
    "title": "",
    "section": "",
    "text": "&lt;font face=\"Zar_Bd.ttf\" size=5&gt;\n    &lt;div align=center&gt;\n        &lt;font face=\"IranNastaliq\" size=10&gt;\n            &lt;p dir=\"rtl\" style=\"text-align: justify;\"&gt;&lt;/p&gt;\n            &lt;p dir=\"rtl\" style=\"text-align: justify;\"&gt;&lt;/p&gt;\nبه نام خدا\n\n\n        &lt;/font&gt;\n           &lt;font color=#FF7500 face=\"IranNastaliq\" size=30&gt;   &lt;h3&gt;درس اول: معرفی و نصب پایتون &lt;/h3&gt;  &lt;/font&gt;\n    &lt;/div&gt;\n    &lt;hr /&gt;\n    &lt;style type=\"text/css\" scoped&gt;\n    p{\n    border: 1px solid #a2a9b1;background-color: #f8f9fa;display: inline-block;\n    };\n    &lt;/style&gt;\n&lt;/font&gt;\n\n\nپایتون چیست؟\n\n\nپایتون یک زبان برنامه‌نویسی ساده و قدرتمند است که برای ساخت برنامه‌های کاربردی و وب استفاده می‌شود. این زبان از نوع «شی‌گرا» و «سطح بالا» است، یعنی به کمک آن می‌توان خیلی راحت و سریع برنامه نوشت.\n\n\nیکی از ویژگی‌های مهم پایتون، ساده بودن دستورهای آن است. همین موضوع باعث شده یادگیری آن برای مبتدی‌ها بسیار آسان باشد. کسانی که با زبان‌های دیگر هم کار کرده‌اند، معمولاً پایتون را خواناتر و قابل‌فهم‌تر می‌دانند. این خوانایی بالا کمک می‌کند اعضای یک تیم راحت‌تر با هم همکاری کنند.\n\n\nدر پایتون می‌توان از «ماژول‌ها» و «پکیج‌ها» استفاده کرد. این یعنی کدی که یک‌بار نوشته می‌شود را می‌توان بارها در پروژه‌های مختلف استفاده کرد. این ویژگی باعث می‌شود زمان کمتری برای نوشتن برنامه‌های جدید صرف شود.\n\n\nاگر برنامه‌نویسی یک ماژول خاص بنویسد، دیگران هم می‌توانند از آن استفاده کنند. اضافه کردن (Import) یا خروجی گرفتن (Export) از این ماژول‌ها بسیار ساده است.\n\n\nپایتون یک مزیت خیلی بزرگ دارد: همه ابزارهای اصلی آن رایگان هستند! شما هم می‌توانید مفسر و هم کتابخانه‌های آن را رایگان روی هر سیستم‌عاملی نصب و استفاده کنید. این یعنی نیازی به خرید ابزارهای گران نیست.\n\n\nاگر حس می‌کنید مطالب بالا برایتان پیچیده بود، نگران نباشید. در ادامه، همه مفاهیم به‌صورت کامل و ساده توضیح داده می‌شود. فقط کافی است بدانید پایتون یک زبان ساده، رایگان و کاربردی است که با آن می‌توانید نرم‌افزارهای موبایل، وب و بسیاری برنامه‌های دیگر را بسازید. اگر وقت بگذارید، می‌توانید برنامه‌های خیلی خوبی با پایتون بنویسید.\n\n\nچرا پایتون محبوب است؟\n\n\nپایتون یکی از محبوب‌ترین زبان‌های برنامه‌نویسی دنیاست. اما فقط به خاطر درآمد بالا نیست. دلایل زیادی باعث شده افراد زیادی سراغ یادگیری و استفاده از پایتون بروند.\n\n\n۱. شرکت‌های بزرگ دنیا از پایتون استفاده می‌کنند: شرکت‌هایی مثل گوگل، یوتیوب، فیسبوک، ناسا، دراپ‌باکس، اینستاگرام و حتی IBM از پایتون در پروژه‌های خود استفاده می‌کنند. مثلاً گوگل از پایتون برای هوش مصنوعی و برنامه‌های ابری استفاده می‌کند. دراپ‌باکس هم بیشتر بخش‌های مختلف خودش را با پایتون ساخته است.\n\n\n  \n\n\n۲. کاربرد زیاد در یادگیری ماشین (Machine Learning): پایتون در حوزه‌ی علم داده و یادگیری ماشین بسیار محبوب است. بیشتر کتابخانه‌ها و ابزارهای هوش مصنوعی با پایتون ساخته شده‌اند. به همین دلیل کسانی که می‌خواهند وارد این حوزه شوند معمولاً از پایتون شروع می‌کنند.\n\n\n  \n\n\n۳. مناسب برای افراد مبتدی: اگر تازه می‌خواهید برنامه‌نویسی یاد بگیرید، پایتون انتخاب فوق‌العاده‌ای است. چون دستوراتش ساده است و سریع می‌توان نتیجه گرفت. همین باعث می‌شود یادگیری برای شما جذاب‌تر شود.\n\n\n۴. پایتون تقریباً برای همه‌چیز کاربرد دارد: با پایتون می‌توان برنامه‌های وب، اپلیکیشن‌های گرافیکی، تحلیل داده، اتوماسیون و خیلی چیزهای دیگر ساخت. یعنی اگر فقط پایتون بلد باشید، می‌توانید بیشتر پروژه‌ها را انجام دهید. این یکی از ویژگی‌های خاص این زبان است.\n\n\nویژگی‌های پایتون\n\n\nپایتون یک زبان برنامه‌نویسی پرقدرت است که می‌توان آن را با زبان‌هایی مثل پرل، روبی، پی‌اچ‌پی و جاوا مقایسه کرد. اما چیزی که پایتون را خاص می‌کند، سادگی و امکانات فراوان آن است. در ادامه، مهم‌ترین ویژگی‌های پایتون را با زبان ساده مرور می‌کنیم:\n\n\n\nخوانایی بالا: دستورهای پایتون ساده و شبیه زبان انسان هستند. برای مثال، اگر بخواهیم چیزی را چاپ کنیم، فقط کافی‌ست بنویسیم print. همین سادگی باعث می‌شود کدها راحت‌تر خوانده شوند.\n\n\nآسان برای شروع: پایتون زبانی ساده است و خیلی سریع می‌توان با آن برنامه نوشت. به همین دلیل برای ساخت نمونه‌های اولیه و پروژه‌های ساده بسیار مناسب است.\n\n\nکتابخانه‌های آماده: پایتون مجموعه بزرگی از کتابخانه‌های آماده دارد که کارهای مختلف مثل کار با فایل، جستجو، ساخت وب‌سایت و… را ساده می‌کنند. در بیشتر زبان‌ها باید این‌ها را خودتان بسازید.\n\n\nحالت تعاملی: شما می‌توانید کدهای کوتاه را در محیط تعاملی پایتون تست کنید. یک محیط برنامه‌نویسی ساده هم همراه با پایتون نصب می‌شود تا شروع کار برایتان راحت‌تر باشد.\n\n\nقابل توسعه: اگر نیاز به امکانات بیشتر دارید، می‌توانید با افزودن ماژول‌هایی که حتی با زبان‌هایی مثل C نوشته شده‌اند، پایتون را گسترش دهید.\n\n\nقابل استفاده در برنامه‌های دیگر: پایتون را می‌توان در دل برنامه‌های دیگر قرار داد تا کاربران آن برنامه‌ها بتوانند با پایتون کدنویسی کنند.\n\n\nسازگاری با همه سیستم‌عامل‌ها: پایتون روی ویندوز، لینوکس، مک و بیشتر سیستم‌ها قابل اجرا است و طوری طراحی شده که در همه جا تقریباً به یک شکل کار کند.\n\n\nکاملاً رایگان و متن‌باز: استفاده از پایتون هیچ هزینه‌ای ندارد. می‌توانید آن را آزادانه دانلود، ویرایش و استفاده کنید.\n\n\n\nراه‌اندازی محیط پایتون چگونه است؟\n\n\nیکی از مهم‌ترین موضوعات هنگام کار کردن با هر زبان برنامه‌نویسی «راه‌اندازی» (setup) یک «محیط توسعه» (Development Environment) برای آن است که امکان اجرای کدهای نوشته شده به آن زبان را می‌دهد. بدون این محیط توسعه، کاربر هرگز قادر به بررسی اینکه کدی که نوشته کار می‌کند یا نه و آیا دارای خطا است یا خیر، نخواهد بود.\n\n\n\n\n\nبرای زبان برنامه نویسی پایتون، به چیزی با عنوان «مفسر» (interpreter) نیز نیاز است که کد را تبدیل به آنچه می‌کند که برای کامپیوتر قابل خواندن و اجرا است (و در واقع کل برنامه نوشته شده را می‌سازد). برای تبدیل کد، ابتدا باید از «شِل پایتون» (Python shell) استفاده کرد که اغلب مفسر را از طریق چیزی که خط «بَنگ» (bang) نامیده می‌شود فراخوانی می‌کند.\n\n\nهمانطور که برای ساخت یک برنامه کاربری یا فایل دو راه وجود دارد، برای این کار نیز دو روش موجود است. می‌توان برنامه را با یک «ویرایش‌گر متن» (text editor) ساده مانند WordPad یا ++Notepad ساخت. همچنین، می‌توان برنامه را با استفاده از شل پایتون آماده کرد. مزایا و معایبی برای هر روش وجود دارد که در ادامه تشریح خواهند شد.\n\n\n\n\n\nنصب پایتون\n\n\nبرای نصب پایتون به وب‌سایت رسمی آن  www.python.org  بروید و نسخه‌ی آخر Python 3 را دانلود و نصب کنید.\n\n\n\n✔ در ویندوز، گزینه “Add Python to PATH” را فعال کنید.\n\n&lt;img src=\"images/win_installer.png\"&gt;\n\nپس از نصب، دستور زیر را برای اطمینان اجرا کنید. برای اینکار در پنجره ترمینال ویندوز تایپ کنید:\n\n\n\npython –version\n\nIDE چیست؟\n\n\nIDE مخفف عبارت محیط توسعه یکپارچه است. این ابزار نرم‌افزاری همه چیزهایی را که یک برنامه‌نویس برای نوشتن، اجرا، ویرایش و تست برنامه نیاز دارد، در یک محیط واحد در اختیار او قرار می‌دهد.\n\n\nبه زبان ساده، اگر بخواهیم برنامه‌ای بسازیم، باید قسمت‌های مختلفی مثل نوشتن کد، طراحی ظاهر برنامه، بررسی خطاها و اجرای برنامه را انجام دهیم. با استفاده از IDE می‌توان همه این کارها را در یک برنامه انجام داد و لازم نیست برای هر مرحله، ابزار جداگانه‌ای نصب کنیم.\n\n\nبسیاری از IDEها امکانات مفیدی مثل کد نویسی سریع‌تر، کامل کردن خودکار کد، اشکال‌زدایی (Debugging) و نمایش خطاها را دارند. این امکانات باعث می‌شوند نوشتن برنامه آسان‌تر و سریع‌تر شود.\n\n\nIDEها معمولاً دارای بخش‌های زیر هستند:\n\n\n\nویرایشگر کد (Code Editor)\n\n\nکامپایلر یا مفسر (برای اجرای کد)\n\n\nاشکال‌زدا (Debugger)\n\n\nابزارهای تکمیل خودکار و پیشنهاد کد\n\n\n\nبرخی IDEها فقط برای یک زبان خاص ساخته شده‌اند. مثلاً PyCharm برای پایتون یا IntelliJ برای جاوا. ولی بعضی دیگر مثل VS Code یا Eclipse برای چند زبان قابل استفاده‌اند.\n\n\nیکی از ویژگی‌های مهم IDEها این است که اگر در کد خطایی وجود داشته باشد، خیلی راحت آن را پیدا کرده و نشان می‌دهند. این کار به برنامه‌نویس کمک می‌کند سریع‌تر مشکلات را حل کند.\n\n\nدر پروژه‌های بزرگ و پیچیده، استفاده از IDE بسیار کاربردی‌تر از ویرایشگرهای ساده است. چون هم سرعت برنامه‌نویسی را بیشتر می‌کند و هم کدنویسی را مرتب و راحت‌تر می‌سازد.\n\n\nدر ادامه، تفاوت IDE و ویرایشگر متن را بررسی خواهیم کرد تا بدانیم کدام ابزار برای چه کاری مناسب‌تر است.\n\n\nمحبوب‌ترین محیط‌های توسعه (IDE) برای پایتون\n\n\nبرای برنامه‌نویسی با زبان پایتون، ابزارهای مختلفی وجود دارد که می‌توان از آن‌ها برای نوشتن، اجرا و تست کدها استفاده کرد. در این بخش، محبوب‌ترین IDEها و ویرایشگرهایی را که بیشتر برنامه‌نویسان پایتون استفاده می‌کنند معرفی می‌کنیم.\n\n\n\nJupyter Notebook: محیطی تحت وب، ساده و تعاملی. مخصوص آموزش، تحلیل داده و یادگیری مرحله‌به‌مرحله. خروجی کد و نمودارها را همان‌جا نشان می‌دهد.\n\n\nGoogle Colab: نسخه آنلاین Jupyter که نیاز به نصب ندارد. روی فضای ابری اجرا می‌شود و برای دانشجویان بسیار مناسب است. فقط با داشتن حساب Gmail قابل استفاده است.\n\n\nVisual Studio Code (VS Code): ویرایشگر سبک و حرفه‌ای که با نصب افزونه Python، به یک IDE کامل تبدیل می‌شود. مناسب برای پروژه‌های بزرگ‌تر.\n\n\nPyCharm: یک IDE قدرتمند مخصوص پایتون از شرکت JetBrains. نسخه رایگان (Community) و حرفه‌ای (Professional) دارد. برای پروژه‌های حرفه‌ای مناسب است و امکانات زیادی برای دیباگ، تست و مدیریت پروژه‌ها فراهم می‌کند.\n\n\nThonny: محیطی بسیار ساده و سبک، مخصوص مبتدی‌ها. اگر تازه‌کار هستید، Thonny بهترین گزینه برای شروع است.\n\n\nSpyder: مخصوص برنامه‌نویسان علمی و تحلیل‌گران داده. همراه Anaconda نصب می‌شود و برای کار با NumPy، Pandas و Matplotlib عالی است.\n\n\n\nهر کدام از این محیط‌ها نقاط قوت خاص خود را دارند. اگر تازه شروع کرده‌اید، پیشنهاد می‌شود با Jupyter Notebook یا Google Colab شروع کنید و سپس بر اساس نیاز، به محیط‌های پیشرفته‌تر مثل VS Code یا PyCharm مهاجرت کنید.\n\n\nJupyter Notebook چیست؟\n\n\nJupyter Notebook یک ابزار بسیار پرکاربرد و محبوب برای نوشتن و اجرای کدهای پایتون است. با استفاده از این ابزار، شما می‌توانید کد بنویسید، آن را اجرا کنید، نتیجه‌اش را ببینید و حتی توضیحاتی به‌صورت متن، تصویر یا فرمول‌های ریاضی در کنار آن اضافه کنید.\n\n\nJupyter مخصوصاً برای یادگیری برنامه‌نویسی، تحلیل داده‌ها و انجام پروژه‌های علمی و دانشگاهی بسیار مناسب است. چون به شما اجازه می‌دهد مرحله به مرحله کد بنویسید، اجرا کنید و همان‌جا نتیجه را ببینید.\n\n\nیک فایل Jupyter Notebook با پسوند .ipynb ذخیره می‌شود و هر فایل شامل چندین “سلول” است. در این سلول‌ها می‌توان کد، توضیح متنی (Markdown)، نمودار، تصویر یا خروجی برنامه را قرار داد.\n\n\n  \n\n\nویژگی‌های اصلی Jupyter Notebook:\n\n\n\nاجرا گام‌به‌گام: می‌توانید هر سلول را جداگانه اجرا کنید و نتیجه را همان‌جا ببینید.\n\n\nنمایش همزمان کد و توضیح: می‌توانید کنار هر کد، توضیح بنویسید که برای آموزش بسیار مفید است.\n\n\nپشتیبانی از نمودار و تصویر: خروجی‌هایی مثل جدول و نمودار را می‌توانید مستقیم ببینید.\n\n\nمحیط تحت مرورگر: Jupyter در مرورگر اجرا می‌شود و نیازی به نصب نرم‌افزار گرافیکی جداگانه ندارد.\n\n\n\nبرای استفاده از Jupyter دو راه اصلی وجود دارد:\n\n\n\nاستفاده از Google Colab: یک محیط آنلاین رایگان از گوگل که نیاز به نصب ندارد و تنها با یک حساب Gmail قابل استفاده است.\n\n\nنصب روی کامپیوتر شخصی: می‌توانید با نصب Anaconda یا با استفاده از pip، Jupyter را روی سیستم خود اجرا کنید.\n\n\n\nJupyter Notebook یکی از بهترین ابزارها برای دانشجویانی است که می‌خواهند پایتون را همراه با تمرین و پروژه یاد بگیرند. در این دوره آموزشی، ما از این ابزار برای حل تمرین‌ها، آموزش مفاهیم و انجام پروژه‌ها استفاده خواهیم کرد.\n\n\nنصب Jupyter Notebook\n\n\nبرای نصب Jupyter از دستور زیر در ترمینال استفاده کنید:\n\npip install notebook\njupyter-lab\n\nVisual Studio Code چیست؟\n\n\nVisual Studio Code یا به اختصار VS Code، یک ویرایشگر کد بسیار محبوب و پرکاربرد است که توسط شرکت مایکروسافت ساخته شده است. این ابزار رایگان و سبک است و روی ویندوز، مک و لینوکس قابل نصب است.\n\n\nVS Code از بیشتر زبان‌های برنامه‌نویسی مانند Python، JavaScript، C++، HTML و بسیاری دیگر پشتیبانی می‌کند. با نصب افزونه‌ها (Extensions) می‌توانید امکانات آن را برای هر زبان توسعه دهید.\n\n\nدر دوره آموزش پایتون، از VS Code به‌عنوان یکی از ابزارهای اصلی برای نوشتن، اجرای کد و ساخت پروژه‌های واقعی استفاده خواهیم کرد.\n\n\nویژگی‌های اصلی VS Code:\n\n\n\nسبک و سریع: اجرای سریع و مناسب برای کامپیوترهای ضعیف‌تر\n\n\nتکمیل خودکار کد (Auto-complete): پیشنهاد کدها هنگام نوشتن\n\n\nاشکال‌زدایی (Debugging): امکان بررسی و پیدا کردن خطاها در کد\n\n\nامکان نصب افزونه‌ها: برای اضافه کردن امکانات بیشتر مانند اجرای کد پایتون، کنترل نسخه (Git)، یا قالب‌بندی کد\n\n\nپشتیبانی از فارسی: با نصب افزونه‌های لازم، منوی فارسی و کدنویسی راست‌چین نیز ممکن است\n\n\n\nبرای نوشتن برنامه‌های پایتون با VS Code، تنها کافی است:\n\n\n\nVS Code را از سایت رسمی code.visualstudio.com دانلود و نصب کنید.\n\n\nافزونه Python را از بخش Extensions نصب کنید.\n\n\nدر صورت نیاز، Python را نیز روی سیستم خود نصب کنید.\n\n\n\nاگر به دنبال محیطی ساده ولی حرفه‌ای برای برنامه‌نویسی هستید، VS Code یک انتخاب عالی است. با آن می‌توانید پروژه‌های واقعی پایتون را مدیریت و اجرا کنید.\n\n\n\nنصب VS Code\n\n\nبرای کدنویسی بهتر، Visual Studio Code را از اینجا نصب کنید و افزونه Python را فعال نمایید. نرم‌افزار Virtual Studio Code، محیطی عالی و یکپارچه را برای توسعه کدهای پایتون فراهم کرده است. کار با این نرم‌افزار ساده‌ است و همراه خود ویژگی‌های درونی زیادی را ارائه می‌دهد که باعث ارتقای کیفیت تجربه برنامه نویسی و توسعه‌دهندگی می‌شود.\n\n\n  \n\n\n\n\nساختار فایل‌های پایتون\n\n\nدو فرمت اصلی:\n\n\n\n.py برای فایل‌های متنی ساده\n\n\n.ipynb برای نوت‌بوک‌های تعاملی\n\n\n\n\n# hello.py\nname = input(\"نام شما چیست؟ \")\nprint(f\"سلام {name}!\")\n\nنام شما چیست؟  Hossein\nسلام Hossein!\n\n\n\nx = 10\ny = 7\n\n\nx + y\n\n17\n\n\n\n\n🎯 جمع‌بندی\n\n\n\n✔ نصب Python و VS Code\n\n\n✔ آشنایی با Jupyter و Google Colab\n\n\n✔ اجرای اولین کد پایتون"
  }
]